package com.example.newshort;

 
import java.util.ArrayList;
import java.util.List;








import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

 
public class MainActivity extends Activity {
 
	ArrayList<PInfo> allapps;
	String current_app_package;
	String current_app_name;
	Drawable current_app_icon;
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
         
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
         
        
        allapps = getPackages(); // this is a list of all the apps
        PInfo current_app = allapps.get(4);
        current_app_package = current_app.pname;
        current_app_name = current_app.appname;
        current_app_icon = current_app.icon;
        //ComponentName comp_app_name= new ComponentName(current_app_package, current_app.appname);
        
        //Intent i;
        //PackageManager manager = packs.get(3);
        //i = manager.getLaunchIntentForPackage("app package name");
        
       // getPackages(); // seeing it runs
        
        //Add listener to add shortcut button
        Button add = (Button) findViewById(R.id.buttonAddShortcut);
        add.setOnClickListener(new OnClickListener() {
             
            @Override
            public void onClick(View v) {
                addShortcut(); //Add shortcut on Home screen
            }
        });
         
        //Add listener to remove shortcut button
        Button remove = (Button) findViewById(R.id.buttonRemoveShortcut);
        remove.setOnClickListener(new OnClickListener() {
             
            @Override
            public void onClick(View v) {
                removeShortcut(); //Remove shortcut from Home screen
            }
        });     
    }
     
    private void addShortcut() {
        //Adding shortcut for MainActivity 
        //on Home screen
    	//String b = apps.appname ;
    	
        //Intent shortcutIntent = new Intent(getApplicationContext(), MainActivity.class);

    	
    	/*
    	
        Intent shortcutIntent = new Intent(getApplicationContext(), MainActivity.class );
    	
        shortcutIntent.setAction(Intent.ACTION_MAIN);
 
        Intent addIntent = new Intent();
        addIntent
                .putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);
        addIntent.putExtra(Intent.EXTRA_SHORTCUT_NAME, "HelloWorldShortcut");
        addIntent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE,
            Intent.ShortcutIconResource.fromContext(getApplicationContext(),
                        R.drawable.ic_launcher));
 
        addIntent
                .setAction("com.android.launcher.action.INSTALL_SHORTCUT");
        getApplicationContext().sendBroadcast(addIntent);
        
        */
    	createShortcutOnDesktop(this);
    	
    }
     
    private void removeShortcut() {
         
        //Deleting shortcut for MainActivity 
        //on Home screen
        /*Intent shortcutIntent = new Intent(getApplicationContext(),
                MainActivity.class);
        shortcutIntent.setAction(Intent.ACTION_MAIN);
         
        Intent addIntent = new Intent();
        addIntent
                .putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);
        addIntent.putExtra(Intent.EXTRA_SHORTCUT_NAME, "HelloWorldShortcut");
 
        addIntent
                .setAction("com.android.launcher.action.UNINSTALL_SHORTCUT");
        getApplicationContext().sendBroadcast(addIntent);
        */
    	
    	removeShortcutOnDesktop(this);
    	
    }
    
    
	
	private void createShortcutOnDesktop(MainActivity app) {

		//need to unhide this and fix
		//ShortcutIconResource icon = Intent.ShortcutIconResource.fromContext(this,  R.drawable.icon);
	    /*
		Intent shortcutIntent = new Intent();
	    //Intent launchIntent = new Intent(this, MainActivity.class); // pretty sure shouldnt be main activity here

	    shortcutIntent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, app.getIntentShortcut());
	    shortcutIntent.putExtra(Intent.EXTRA_SHORTCUT_NAME, current_app_name); //Intent.ShortcutIconResource.fromContext(context, current_app_icon)
	    shortcutIntent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE, current_app_icon);
	    shortcutIntent.setAction("com.android.launcher.action.INSTALL_SHORTCUT");
	    */
		Intent shortcutIntent = getPackageManager().getLaunchIntentForPackage(current_app_package);
    	
        shortcutIntent.setAction(Intent.ACTION_MAIN);
 
        Bitmap BM = drawableToBitmap(current_app_icon);
      
        int resourceID = getResources().getIdentifier( "icon", "id", current_app_package );
        
       // int reso = Resources.getResourseIdByName( current_app_package, "drawable", "icon" );
        
       
        
        Intent addIntent = new Intent();
        addIntent
                .putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);
        addIntent.putExtra(Intent.EXTRA_SHORTCUT_NAME, current_app_name); //shortcut name 
        addIntent.putExtra(Intent.EXTRA_SHORTCUT_ICON, 
            Intent.ShortcutIconResource.fromContext(getApplicationContext(), R.drawable.ic_launcher));
 
        addIntent
                .setAction("com.android.launcher.action.INSTALL_SHORTCUT");
        getApplicationContext().sendBroadcast(addIntent);
		
	    
	    this.sendBroadcast(shortcutIntent);
	    finish();
	    

	}
	
	

	
	private void removeShortcutOnDesktop(MainActivity app) {

		//need to unhide this and fix
		//ShortcutIconResource icon = Intent.ShortcutIconResource.fromContext(this,  R.drawable.icon);
	    /*
		Intent shortcutIntent = new Intent();
	    //Intent launchIntent = new Intent(this, MainActivity.class); // pretty sure shouldnt be main activity here

	    shortcutIntent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, app.getIntentShortcut());
	    shortcutIntent.putExtra(Intent.EXTRA_SHORTCUT_NAME, current_app_name); //Intent.ShortcutIconResource.fromContext(context, current_app_icon)
	    shortcutIntent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE, current_app_icon);
	    shortcutIntent.setAction("com.android.launcher.action.INSTALL_SHORTCUT");
	    */
		Intent shortcutIntent = getPackageManager().getLaunchIntentForPackage(current_app_package);
    	
        shortcutIntent.setAction(Intent.ACTION_MAIN);
 
 
      
        int resourceID = getResources().getIdentifier( "icon", "id", current_app_package );
        
       // int reso = Resources.getResourseIdByName( current_app_package, "drawable", "icon" );
        
        
        
        Intent addIntent = new Intent();
        addIntent
                .putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);
        addIntent.putExtra(Intent.EXTRA_SHORTCUT_NAME, current_app_name); //shortcut name 
        addIntent.putExtra(Intent.EXTRA_SHORTCUT_ICON, 
            Intent.ShortcutIconResource.fromContext(getApplicationContext(), R.drawable.ic_launcher));
 
        addIntent
                .setAction("com.android.launcher.action.UNINSTALL_SHORTCUT");
        getApplicationContext().sendBroadcast(addIntent);
		
	    
	    this.sendBroadcast(shortcutIntent);
	    finish();
	    

	}	
	
	

	public Intent getIntentShortcut()
	{       

	    Intent i = new Intent();
	    i.setClassName(current_app_package, current_app_name);
	    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
	    i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);

	    return i;
	}
    
    class PInfo {
        private String appname = "";
        private String pname = "";
        private String versionName = "";
        private int versionCode = 0;
        private Drawable icon;
        private void prettyPrint() {
        	// i added app stuff at the beginning idk why a log type wasn't there?
            Log.v("app stuff",appname + "\t" + pname + "\t" + versionName + "\t" + versionCode);
        }
    }

    private ArrayList<PInfo> getPackages() {
        ArrayList<PInfo> apps = getInstalledApps(false); /* false = no system packages */
        final int max = apps.size();
        for (int i=0; i<max; i++) {
            apps.get(i).prettyPrint();
        }
        return apps;
    }

    private ArrayList<PInfo> getInstalledApps(boolean getSysPackages) {
        ArrayList<PInfo> res = new ArrayList<PInfo>();        
        List<PackageInfo> packs = getPackageManager().getInstalledPackages(0);
        for(int i=0;i<packs.size();i++) {
            PackageInfo p = packs.get(i);
            if ((!getSysPackages) && (p.versionName == null)) {
                continue ;
            }
            PInfo newInfo = new PInfo();
            newInfo.appname = p.applicationInfo.loadLabel(getPackageManager()).toString();
            newInfo.pname = p.packageName;
            newInfo.versionName = p.versionName;
            newInfo.versionCode = p.versionCode;
            newInfo.icon = p.applicationInfo.loadIcon(getPackageManager());
            res.add(newInfo);
        }
        return res; 
    }
    
    
    
    
    public static Bitmap drawableToBitmap (Drawable drawable) {
        if (drawable instanceof BitmapDrawable) {
            return ((BitmapDrawable)drawable).getBitmap();
        }

        Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap); 
        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
        drawable.draw(canvas);

        return bitmap;
    }

    
     
}
