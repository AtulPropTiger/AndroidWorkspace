package com.smart.taskbar;


import android.app.Service;
import android.app.WallpaperManager;
import android.content.Intent;
import android.graphics.PixelFormat;
import android.os.IBinder;
import android.os.SystemClock;
import android.util.Log;
import android.view.Gravity;
import android.view.MotionEvent;
import android.view.MotionEvent.PointerProperties;
import android.view.View;
import android.view.WindowManager;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.Toast;

public class HUD extends Service implements OnTouchListener {
	
	long down_time_start;
	long down_time_end;
	String name = "";
	int count = 0;
	float track_x = 0;
	float track_y = 0;
	WindowManager.LayoutParams correct_peram = null;
	
    Button mButton;
    @Override
    public IBinder
    onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();
        count = 0;//dont think i need this
        //mView = new HUDView(this);
        mButton = new Button(this);
        Toast.makeText(this,"HUD starting up!", Toast.LENGTH_SHORT).show();
        mButton.setText("Overlay button");
        mButton.setOnTouchListener(this);
        
        WindowManager.LayoutParams params = new WindowManager.LayoutParams(
        
		        WindowManager.LayoutParams.WRAP_CONTENT,
		        WindowManager.LayoutParams.WRAP_CONTENT,
		        WindowManager.LayoutParams.TYPE_PHONE, // chaned to phone 2/4/14 , from system overlay
		        //WindowManager.LayoutParams.TYPE_SYSTEM_OVERLAY,
		        WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
		        | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH | 
		        WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE 
		        /*| WindowManager.LayoutParams.FLAG_SPLIT_TOUCH*/ ,
		        PixelFormat.TRANSLUCENT);
        		//above is the test

        
        
       // params.gravity = Gravity.RIGHT | Gravity.TOP;
        params.gravity = Gravity.FILL; //trying this out prob need unhide above and delete
        //this will make the whole window give correct cords for the touch event, it jsut
        //doesnt let anything else happen, cant open apps etc.
        params.setTitle("Load Average");
        WindowManager wm = (WindowManager) getSystemService(WINDOW_SERVICE);
        wm.addView(mButton, params);
        correct_peram = params; //save this for use in on touch
        
        
      
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        if(mButton != null)
        {
            ((WindowManager) getSystemService(WINDOW_SERVICE)).removeView(mButton);
            mButton = null;
        }
    }

	
	//public boolean onTouch(View v, MotionEvent event) {
	//	return true;
	//}
    
    
}




